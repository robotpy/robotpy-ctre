[build-system]
build-backend = "hatchling.build"
requires = [
    "hatchling",
    "hatch-vcs",
    "semiwrap~=0.1.1",
    "hatch-meson~=0.1.0b2",
    "hatch-nativelib~=0.2.0",
    "hatch-robotpy~=0.2.0",
    "phoenix6~=25.4.0",
    "wpilib~=2025.3.2.2",
]


[project]
name = "robotpy-ctre"
dynamic = ["version"]
description = "Binary wrappers for the CTRE Phoenix library"
authors = [
    {name = "RobotPy Development Team", email = "robotpy@googlegroups.com"},
]
license = "MIT"
dependencies = [
    "phoenix6~=25.4.0",
    "wpilib~=2025.3.2.2",
]

[project.urls]
"Source code" = "https://github.com/robotpy/robotpy-ctre"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "phoenix5/version.py"

[tool.hatch.build.targets.wheel]
packages = ["phoenix5"]

#
# Autogenerated TOML via `python3 -m hatch_robotpy.from_vendor`
#

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "wpiapi-cpp"
group_id = "com.ctre.phoenix"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.35.1"
libs = [
    "CTRE_Phoenix_WPI",
]
extract_to = "phoenix5"
enable_if = "platform_machine=='roborio'"

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "api-cpp"
group_id = "com.ctre.phoenix"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.35.1"
libs = [
    "CTRE_Phoenix",
]
extract_to = "phoenix5"
enable_if = "platform_machine=='roborio'"

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "cci"
group_id = "com.ctre.phoenix"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.35.1"
libs = [
    "CTRE_PhoenixCCI",
]
extract_to = "phoenix5"
enable_if = "platform_machine=='roborio'"

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "wpiapi-cpp-sim"
group_id = "com.ctre.phoenix.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.35.1"
libs = [
    "CTRE_Phoenix_WPISim",
]
extract_to = "phoenix5"
enable_if = "platform_machine!='roborio'"

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "api-cpp-sim"
group_id = "com.ctre.phoenix.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.35.1"
libs = [
    "CTRE_PhoenixSim",
]
extract_to = "phoenix5"
enable_if = "platform_machine!='roborio'"

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "cci-sim"
group_id = "com.ctre.phoenix.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.35.1"
libs = [
    "CTRE_PhoenixCCISim",
]
extract_to = "phoenix5"
enable_if = "platform_machine!='roborio'"

#
# End autogenerated TOML
#

#
# Phoenix6 headers
#

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "tools"
group_id = "com.ctre.phoenix6"
repo_url = "https://maven.ctr-electronics.com/release"
version = "25.4.0"
libs = []
extract_to = "phoenix5"
enable_if = "platform_machine=='roborio'"

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "tools-sim"
group_id = "com.ctre.phoenix6.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "25.4.0"
libs = []
extract_to = "phoenix5"
enable_if = "platform_machine!='roborio'"

#
# Bind it all together
#

[[tool.hatch.build.hooks.nativelib.pcfile]]
pcfile = "phoenix5/phoenix5_api.pc"
name = "phoenix5_api"
version = "5.35.1"
includedir = "phoenix5/include"
libdir = "phoenix5/lib"
shared_libraries = [
    "CTRE_PhoenixCCI",
    "CTRE_Phoenix",
    "CTRE_Phoenix_WPI",
]
requires = [
    "robotpy-native-wpiutil",
    "robotpy-native-wpinet",
    "robotpy-native-wpimath",
    "robotpy-native-wpihal",
    "robotpy-native-ntcore",
    "robotpy-native-wpilib",
]
enable_if = "platform_machine=='roborio'"


[[tool.hatch.build.hooks.nativelib.pcfile]]
pcfile = "phoenix5/phoenix5_api.pc"
name = "phoenix5_api"
version = "5.35.1"
includedir = "phoenix5/include"
libdir = "phoenix5/lib"
shared_libraries = [
    "CTRE_PhoenixCCISim",
    "CTRE_PhoenixSim",
    "CTRE_Phoenix_WPISim",
]
requires = [
    "robotpy-native-wpiutil",
    "robotpy-native-wpihal",
    "robotpy-native-wpilib",
]
enable_if = "platform_machine!='roborio'"



[tool.hatch.build.hooks.semiwrap]

[tool.hatch.build.hooks.meson]

[tool.semiwrap]
update_init = ["phoenix5 phoenix5._ctre"]
scan_headers_ignore = [
    "ctre/Phoenix.h",

    # ctre/phoenix
    "ctre/phoenix/CTRLogger.h",
    "ctre/phoenix/Context.h",
    "ctre/phoenix/HsvToRgb.h",
    "ctre/phoenix/LinearInterpolation.h",
    "ctre/phoenix/PhoenixVersion.h",
    "ctre/phoenix/RCRadio3Ch.h",
    "ctre/phoenix/StatusCodes.h",
    "ctre/phoenix/Stopwatch.h",
    "ctre/phoenix/Utilities.h",
    "ctre/phoenix/WPI_CallbackHelper.h",
    "ctre/phoenix/autocache.h",
    "ctre/phoenix/export.h",

    # ctre/phoenix/led
    "ctre/phoenix/led/CANdleConfigUtil.h", # broken?

    # ctre/phoenix/motorcontrol
    "ctre/phoenix/motorcontrol/DeviceCatalog.h",
    "ctre/phoenix/motorcontrol/GroupMotorControllers.h",
    "ctre/phoenix/motorcontrol/WPI_AutoFeedEnable.h",

    # ctre/phoenix/tasking
    "ctre/phoenix/tasking/ButtonMonitor.h",

    "ctre/phoenix/cci/*",
    "ctre/phoenix/jni/*",
    "ctre/phoenix/platform/*",
    "ctre/phoenix/string_util/*",
    "ctre/phoenix/tasking/Schedulers/*",
    "ctre/phoenix/threading/*",

    "ctre/phoenix6/*",
]

[tool.semiwrap.extension_modules."phoenix5._ctre"]
name = "phoenix5"
depends = ["wpiutil", "wpinet", "wpimath", "wpihal", "ntcore", "wpilib", "phoenix5_api"]
wraps = ["phoenix5_api"]


[tool.semiwrap.extension_modules."phoenix5._ctre".headers]
# ctre/phoenix
# WPI_CallbackHelper = "ctre/phoenix/WPI_CallbackHelper.h"

# ctre/phoenix/motorcontrol
# WPI_AutoFeedEnable = "ctre/phoenix/motorcontrol/WPI_AutoFeedEnable.h"

# ctre/phoenix/motorcontrol/can
WPI_BaseMotorController = "ctre/phoenix/motorcontrol/can/WPI_BaseMotorController.h"
WPI_TalonSRX = "ctre/phoenix/motorcontrol/can/WPI_TalonSRX.h"
WPI_VictorSPX = "ctre/phoenix/motorcontrol/can/WPI_VictorSPX.h"

# ctre/phoenix/sensors
WPI_CANCoder = "ctre/phoenix/sensors/WPI_CANCoder.h"
# WPI_Pigeon2 = "ctre/phoenix/sensors/WPI_Pigeon2.h"
WPI_PigeonIMU = "ctre/phoenix/sensors/WPI_PigeonIMU.h"

# ctre/phoenix/tasking
# ButtonMonitor = "ctre/phoenix/tasking/ButtonMonitor.h"


# ctre
# Phoenix = "ctre/Phoenix.h"

# ctre/phoenix
CANBusAddressable = "ctre/phoenix/CANBusAddressable.h"
CANifier = "ctre/phoenix/CANifier.h"
# CTRLogger = "ctre/phoenix/CTRLogger.h"
CustomParamConfiguration = "ctre/phoenix/CustomParamConfiguration.h"
# HsvToRgb = "ctre/phoenix/HsvToRgb.h"
# LinearInterpolation = "ctre/phoenix/LinearInterpolation.h"
# RCRadio3Ch = "ctre/phoenix/RCRadio3Ch.h"
# Stopwatch = "ctre/phoenix/Stopwatch.h"
# Utilities = "ctre/phoenix/Utilities.h"

# ctre/phoenix/led
Animation = "ctre/phoenix/led/Animation.h"
BaseStandardAnimation = "ctre/phoenix/led/BaseStandardAnimation.h"
BaseTwoSizeAnimation = "ctre/phoenix/led/BaseTwoSizeAnimation.h"
CANdle = "ctre/phoenix/led/CANdle.h"
# CANdleConfigUtil = "ctre/phoenix/led/CANdleConfigUtil.h" # broken?
CANdleConfiguration = "ctre/phoenix/led/CANdleConfiguration.h"
CANdleLedStripType = "ctre/phoenix/led/CANdleLedStripType.h"
ColorFlowAnimation = "ctre/phoenix/led/ColorFlowAnimation.h"
FireAnimation = "ctre/phoenix/led/FireAnimation.h"
LarsonAnimation = "ctre/phoenix/led/LarsonAnimation.h"
RainbowAnimation = "ctre/phoenix/led/RainbowAnimation.h"
RgbFadeAnimation = "ctre/phoenix/led/RgbFadeAnimation.h"
SingleFadeAnimation = "ctre/phoenix/led/SingleFadeAnimation.h"
StrobeAnimation = "ctre/phoenix/led/StrobeAnimation.h"
TwinkleAnimation = "ctre/phoenix/led/TwinkleAnimation.h"
TwinkleOffAnimation = "ctre/phoenix/led/TwinkleOffAnimation.h"
VBatOutputMode = "ctre/phoenix/led/VBatOutputMode.h"

# ctre/phoenix/motion
BufferedTrajectoryPointStream = "ctre/phoenix/motion/BufferedTrajectoryPointStream.h"

# ctre/phoenix/motorcontrol
# DeviceCatalog = "ctre/phoenix/motorcontrol/DeviceCatalog.h"
# GroupMotorControllers = "ctre/phoenix/motorcontrol/GroupMotorControllers.h"
IFollower = "ctre/phoenix/motorcontrol/IFollower.h"
IMotorController = "ctre/phoenix/motorcontrol/IMotorController.h"
IMotorControllerEnhanced = "ctre/phoenix/motorcontrol/IMotorControllerEnhanced.h"
SensorCollection = "ctre/phoenix/motorcontrol/SensorCollection.h"
# TalonFXSensorCollection = "ctre/phoenix/motorcontrol/TalonFXSensorCollection.h"
# TalonFXSimCollection = "ctre/phoenix/motorcontrol/TalonFXSimCollection.h"
TalonSRXSimCollection = "ctre/phoenix/motorcontrol/TalonSRXSimCollection.h"
VictorSPXSimCollection = "ctre/phoenix/motorcontrol/VictorSPXSimCollection.h"

# ctre/phoenix/motorcontrol/can
BaseMotorController = "ctre/phoenix/motorcontrol/can/BaseMotorController.h"
BaseTalon = "ctre/phoenix/motorcontrol/can/BaseTalon.h"
# TalonFX = "ctre/phoenix/motorcontrol/can/TalonFX.h"
TalonSRX = "ctre/phoenix/motorcontrol/can/TalonSRX.h"
VictorSPX = "ctre/phoenix/motorcontrol/can/VictorSPX.h"

# ctre/phoenix/music
# Orchestra = "ctre/phoenix/music/Orchestra.h"

# ctre/phoenix/platform/can
# PlatformCAN = "ctre/phoenix/platform/can/PlatformCAN.h"

# ctre/phoenix/sensors
BasePigeon = "ctre/phoenix/sensors/BasePigeon.h"
BasePigeonSimCollection = "ctre/phoenix/sensors/BasePigeonSimCollection.h"
CANCoder = "ctre/phoenix/sensors/CANCoder.h"
CANCoderSimCollection = "ctre/phoenix/sensors/CANCoderSimCollection.h"
# Pigeon2 = "ctre/phoenix/sensors/Pigeon2.h"
PigeonIMU = "ctre/phoenix/sensors/PigeonIMU.h"

# ctre/phoenix/signals
IInvertable = "ctre/phoenix/signals/IInvertable.h"
IOutputSignal = "ctre/phoenix/signals/IOutputSignal.h"
MovingAverage = "ctre/phoenix/signals/MovingAverage.h"

# ctre/phoenix/tasking
ILoopable = "ctre/phoenix/tasking/ILoopable.h"
IProcessable = "ctre/phoenix/tasking/IProcessable.h"

# ctre/phoenix/tasking/Schedulers
# ConcurrentScheduler = "ctre/phoenix/tasking/Schedulers/ConcurrentScheduler.h"
# SequentialScheduler = "ctre/phoenix/tasking/Schedulers/SequentialScheduler.h"

# ctre/phoenix/unmanaged
Unmanaged = "ctre/phoenix/unmanaged/Unmanaged.h"


# ctre/configparams
# BmsJsonGenerator = "ctre/configparams/BmsJsonGenerator.h"
# ConfigAllDeserializer = "ctre/configparams/ConfigAllDeserializer.h"
# ConfigAllSerializer = "ctre/configparams/ConfigAllSerializer.h"
# ConfigByteArray = "ctre/configparams/ConfigByteArray.h"
# ConfigConstants = "ctre/configparams/ConfigConstants.h"
# ConfigNumber = "ctre/configparams/ConfigNumber.h"
# ConfigParseValue = "ctre/configparams/ConfigParseValue.h"
# ConfigTypes = "ctre/configparams/ConfigTypes.h"
# DecoratedConfigGroupSerializer = "ctre/configparams/DecoratedConfigGroupSerializer.h"
# Pigeon2JsonGenerator = "ctre/configparams/Pigeon2JsonGenerator.h"

# ctre/diagnostics
# diag_framing = "ctre/diagnostics/diag_framing.h"
# status_bits = "ctre/diagnostics/status_bits.h"

# ctre
# packing = "ctre/packing.h"

# ctre/phoenix
CANifierControlFrame = "ctre/phoenix/CANifierControlFrame.h"
CANifierFaults = "ctre/phoenix/CANifierFaults.h"
CANifierStatusFrame = "ctre/phoenix/CANifierStatusFrame.h"
CANifierStickyFaults = "ctre/phoenix/CANifierStickyFaults.h"
CANifierVelocityMeasPeriod = "ctre/phoenix/CANifierVelocityMeasPeriod.h"
ErrorCode = "ctre/phoenix/ErrorCode.h"
# PhoenixVersion = "ctre/phoenix/PhoenixVersion.h"
# autocache = "ctre/phoenix/autocache.h"

# ctre/phoenix/cci
# BuffTrajPointStream_CCI = "ctre/phoenix/cci/BuffTrajPointStream_CCI.h"
# CANCoder_CCI = "ctre/phoenix/cci/CANCoder_CCI.h"
# CANdle_CCI = "ctre/phoenix/cci/CANdle_CCI.h"
# CANifier_CCI = "ctre/phoenix/cci/CANifier_CCI.h"
# CCI = "ctre/phoenix/cci/CCI.h"
# Diagnostics_CCI = "ctre/phoenix/cci/Diagnostics_CCI.h"
# Logger_CCI = "ctre/phoenix/cci/Logger_CCI.h"
# MotController_CCI = "ctre/phoenix/cci/MotController_CCI.h"
# Orchestra_CCI = "ctre/phoenix/cci/Orchestra_CCI.h"
# PDP_CCI = "ctre/phoenix/cci/PDP_CCI.h"
# PigeonIMU_CCI = "ctre/phoenix/cci/PigeonIMU_CCI.h"
# PlatformCAN_CCI = "ctre/phoenix/cci/PlatformCAN_CCI.h"
# Platform_CCI = "ctre/phoenix/cci/Platform_CCI.h"
# Unmanaged_CCI = "ctre/phoenix/cci/Unmanaged_CCI.h"

# ctre/phoenix/core
GadgeteerUartClient = "ctre/phoenix/core/GadgeteerUartClient.h"

# ctre/phoenix
# export = "ctre/phoenix/export.h"

# ctre/phoenix/jni
# com_ctre_phoenix_CANifierJNI = "ctre/phoenix/jni/com_ctre_phoenix_CANifierJNI.h"
# com_ctre_phoenix_CTRLoggerJNI = "ctre/phoenix/jni/com_ctre_phoenix_CTRLoggerJNI.h"
# com_ctre_phoenix_OrchestraJNI = "ctre/phoenix/jni/com_ctre_phoenix_OrchestraJNI.h"
# com_ctre_phoenix_led_CANdleJNI = "ctre/phoenix/jni/com_ctre_phoenix_led_CANdleJNI.h"
# com_ctre_phoenix_motion_BuffTrajPointStreamJNI = "ctre/phoenix/jni/com_ctre_phoenix_motion_BuffTrajPointStreamJNI.h"
# com_ctre_phoenix_motorcontrol_can_MotControllerJNI = "ctre/phoenix/jni/com_ctre_phoenix_motorcontrol_can_MotControllerJNI.h"
# com_ctre_phoenix_platform_PlatformJNI = "ctre/phoenix/jni/com_ctre_phoenix_platform_PlatformJNI.h"
# com_ctre_phoenix_platform_can_PlatformCANJNI = "ctre/phoenix/jni/com_ctre_phoenix_platform_can_PlatformCANJNI.h"
# com_ctre_phoenix_sensors_CANCoderJNI = "ctre/phoenix/jni/com_ctre_phoenix_sensors_CANCoderJNI.h"
# com_ctre_phoenix_sensors_PigeonImuJNI = "ctre/phoenix/jni/com_ctre_phoenix_sensors_PigeonImuJNI.h"
# com_ctre_phoenix_unmanaged_UnmanagedJNI = "ctre/phoenix/jni/com_ctre_phoenix_unmanaged_UnmanagedJNI.h"

# ctre/phoenix/led
CANdleControlFrame = "ctre/phoenix/led/CANdleControlFrame.h"
CANdleFaults = "ctre/phoenix/led/CANdleFaults.h"
CANdleStatusFrame = "ctre/phoenix/led/CANdleStatusFrame.h"

# ctre/phoenix/motion
MotionProfileStatus = "ctre/phoenix/motion/MotionProfileStatus.h"
SetValueMotionProfile = "ctre/phoenix/motion/SetValueMotionProfile.h"
TrajectoryPoint = "ctre/phoenix/motion/TrajectoryPoint.h"

# ctre/phoenix/motorcontrol
ControlFrame = "ctre/phoenix/motorcontrol/ControlFrame.h"
ControlMode = "ctre/phoenix/motorcontrol/ControlMode.h"
DemandType = "ctre/phoenix/motorcontrol/DemandType.h"
Faults = "ctre/phoenix/motorcontrol/Faults.h"
FeedbackDevice = "ctre/phoenix/motorcontrol/FeedbackDevice.h"
FollowerType = "ctre/phoenix/motorcontrol/FollowerType.h"
InvertType = "ctre/phoenix/motorcontrol/InvertType.h"
LimitSwitchType = "ctre/phoenix/motorcontrol/LimitSwitchType.h"
# MotorCommutation = "ctre/phoenix/motorcontrol/MotorCommutation.h"
NeutralMode = "ctre/phoenix/motorcontrol/NeutralMode.h"
RemoteSensorSource = "ctre/phoenix/motorcontrol/RemoteSensorSource.h"
SensorTerm = "ctre/phoenix/motorcontrol/SensorTerm.h"
# StatorCurrentLimitConfiguration = "ctre/phoenix/motorcontrol/StatorCurrentLimitConfiguration.h"
StatusFrame = "ctre/phoenix/motorcontrol/StatusFrame.h"
StickyFaults = "ctre/phoenix/motorcontrol/StickyFaults.h"
SupplyCurrentLimitConfiguration = "ctre/phoenix/motorcontrol/SupplyCurrentLimitConfiguration.h"
VelocityMeasPeriod = "ctre/phoenix/motorcontrol/VelocityMeasPeriod.h"

# ctre/phoenix
paramEnum = "ctre/phoenix/paramEnum.h"

# ctre/phoenix/platform
# BasePlatform = "ctre/phoenix/platform/BasePlatform.h"
# Platform-pack = "ctre/phoenix/platform/Platform-pack.h"
# Platform = "ctre/phoenix/platform/Platform.h"
# ReportError = "ctre/phoenix/platform/ReportError.h"
# SleepUs = "ctre/phoenix/platform/SleepUs.h"
# canframe = "ctre/phoenix/platform/canframe.h"
# canivore_device = "ctre/phoenix/platform/canivore_device.h"

# ctre/phoenix/sensors
AbsoluteSensorRange = "ctre/phoenix/sensors/AbsoluteSensorRange.h"
CANCoderFaults = "ctre/phoenix/sensors/CANCoderFaults.h"
CANCoderStatusFrame = "ctre/phoenix/sensors/CANCoderStatusFrame.h"
CANCoderStickyFaults = "ctre/phoenix/sensors/CANCoderStickyFaults.h"
MagnetFieldStrength = "ctre/phoenix/sensors/MagnetFieldStrength.h"
# Pigeon2_Faults = "ctre/phoenix/sensors/Pigeon2_Faults.h"
# Pigeon2_StickyFaults = "ctre/phoenix/sensors/Pigeon2_StickyFaults.h"
PigeonIMU_ControlFrame = "ctre/phoenix/sensors/PigeonIMU_ControlFrame.h"
PigeonIMU_Faults = "ctre/phoenix/sensors/PigeonIMU_Faults.h"
PigeonIMU_StatusFrame = "ctre/phoenix/sensors/PigeonIMU_StatusFrame.h"
PigeonIMU_StickyFaults = "ctre/phoenix/sensors/PigeonIMU_StickyFaults.h"
SensorInitializationStrategy = "ctre/phoenix/sensors/SensorInitializationStrategy.h"
SensorTimeBase = "ctre/phoenix/sensors/SensorTimeBase.h"
SensorVelocityMeasPeriod = "ctre/phoenix/sensors/SensorVelocityMeasPeriod.h"

# ctre/phoenix/string_util
# string_util = "ctre/phoenix/string_util/string_util.h"



