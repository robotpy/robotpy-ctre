[tool.robotpy-build.metadata]
name = "robotpy-ctre"
description = "Binary wrappers for the CTRE Phoenix library"
author = "RobotPy Development Team"
author_email = "robotpy@googlegroups.com"
url = "https://github.com/robotpy/robotpy-ctre"
license = "MIT"
install_requires = [
    "wpilib<2024.0.0,>=2023.1.1.0",
]

[build-system]
requires = [
    "robotpy-build<2024.0.0,>=2023.0.0",
    "wpilib<2024.0.0,>=2023.1.1.0",
]

[tool.robotpy-build]
base_package = "ctre"

#
# Autogenerated TOML with vendorjson.py
#

[tool.robotpy-build.wrappers."ctre._wpiapi_cpp"]
name = "ctre_wpiapi_cpp"
ignore = true

[tool.robotpy-build.wrappers."ctre._wpiapi_cpp".override.arch_athena]
ignore = false
depends = [
    "wpiutil",
    "wpinet",
    "wpimath_cpp",
    "wpiHal",
    "ntcore",
    "wpilibc",
    "ctre_tools",
    "ctre_cci",
    "ctre_api_cpp",
]

[tool.robotpy-build.wrappers."ctre._wpiapi_cpp".maven_lib_download]
artifact_id = "wpiapi-cpp"
group_id = "com.ctre.phoenix"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.30.4"
libs = [
    "CTRE_Phoenix_WPI",
]

[tool.robotpy-build.wrappers."ctre._api_cpp"]
name = "ctre_api_cpp"
ignore = true

[tool.robotpy-build.wrappers."ctre._api_cpp".override.arch_athena]
ignore = false
depends = [
    "ctre_tools",
    "ctre_cci",
]

[tool.robotpy-build.wrappers."ctre._api_cpp".maven_lib_download]
artifact_id = "api-cpp"
group_id = "com.ctre.phoenix"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.30.4"
libs = [
    "CTRE_Phoenix",
]

[tool.robotpy-build.wrappers."ctre._cci"]
name = "ctre_cci"
ignore = true

[tool.robotpy-build.wrappers."ctre._cci".override.arch_athena]
ignore = false
depends = [
    "ctre_tools",
]

[tool.robotpy-build.wrappers."ctre._cci".maven_lib_download]
artifact_id = "cci"
group_id = "com.ctre.phoenix"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.30.4"
libs = [
    "CTRE_PhoenixCCI",
]

[tool.robotpy-build.wrappers."ctre._tools"]
name = "ctre_tools"
ignore = true

[tool.robotpy-build.wrappers."ctre._tools".override.arch_athena]
ignore = false

[tool.robotpy-build.wrappers."ctre._tools".maven_lib_download]
artifact_id = "tools"
group_id = "com.ctre.phoenixpro"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_PhoenixTools",
]

[tool.robotpy-build.wrappers."ctre._wpiapi_cpp_sim"]
name = "ctre_wpiapi_cpp_sim"
depends = [
    "wpiutil",
    "wpiHal",
    "wpilibc",
    "ctre_cci_sim",
    "ctre_api_cpp_sim",
]

[tool.robotpy-build.wrappers."ctre._wpiapi_cpp_sim".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._wpiapi_cpp_sim".maven_lib_download]
artifact_id = "wpiapi-cpp-sim"
group_id = "com.ctre.phoenix.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.30.4"
libs = [
    "CTRE_Phoenix_WPISim",
]

[tool.robotpy-build.wrappers."ctre._api_cpp_sim"]
name = "ctre_api_cpp_sim"
depends = [
    "ctre_tools_sim",
    "ctre_cci_sim",
]

[tool.robotpy-build.wrappers."ctre._api_cpp_sim".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._api_cpp_sim".maven_lib_download]
artifact_id = "api-cpp-sim"
group_id = "com.ctre.phoenix.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.30.4"
libs = [
    "CTRE_PhoenixSim",
]

[tool.robotpy-build.wrappers."ctre._cci_sim"]
name = "ctre_cci_sim"
depends = [
    "ctre_tools_sim",
]

[tool.robotpy-build.wrappers."ctre._cci_sim".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._cci_sim".maven_lib_download]
artifact_id = "cci-sim"
group_id = "com.ctre.phoenix.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "5.30.4"
libs = [
    "CTRE_PhoenixCCISim",
]

[tool.robotpy-build.wrappers."ctre._tools_sim"]
name = "ctre_tools_sim"
depends = [
    "ctre_simpropigeon2",
    "ctre_simprocancoder",
    "ctre_simprotalonfx",
    "ctre_simcancoder",
    "ctre_simtalonfx",
    "ctre_simpigeonimu",
    "ctre_simtalonsrx",
    "ctre_simvictorspx",
]

[tool.robotpy-build.wrappers."ctre._tools_sim".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._tools_sim".maven_lib_download]
artifact_id = "tools-sim"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_PhoenixTools_Sim",
]

[tool.robotpy-build.wrappers."ctre._simtalonsrx"]
name = "ctre_simtalonsrx"

[tool.robotpy-build.wrappers."ctre._simtalonsrx".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._simtalonsrx".maven_lib_download]
artifact_id = "simTalonSRX"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_SimTalonSRX",
]

[tool.robotpy-build.wrappers."ctre._simtalonfx"]
name = "ctre_simtalonfx"

[tool.robotpy-build.wrappers."ctre._simtalonfx".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._simtalonfx".maven_lib_download]
artifact_id = "simTalonFX"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_SimTalonFX",
]

[tool.robotpy-build.wrappers."ctre._simvictorspx"]
name = "ctre_simvictorspx"

[tool.robotpy-build.wrappers."ctre._simvictorspx".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._simvictorspx".maven_lib_download]
artifact_id = "simVictorSPX"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_SimVictorSPX",
]

[tool.robotpy-build.wrappers."ctre._simpigeonimu"]
name = "ctre_simpigeonimu"

[tool.robotpy-build.wrappers."ctre._simpigeonimu".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._simpigeonimu".maven_lib_download]
artifact_id = "simPigeonIMU"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_SimPigeonIMU",
]

[tool.robotpy-build.wrappers."ctre._simcancoder"]
name = "ctre_simcancoder"

[tool.robotpy-build.wrappers."ctre._simcancoder".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._simcancoder".maven_lib_download]
artifact_id = "simCANCoder"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_SimCANCoder",
]

[tool.robotpy-build.wrappers."ctre._simprotalonfx"]
name = "ctre_simprotalonfx"

[tool.robotpy-build.wrappers."ctre._simprotalonfx".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._simprotalonfx".maven_lib_download]
artifact_id = "simProTalonFX"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_SimProTalonFX",
]

[tool.robotpy-build.wrappers."ctre._simprocancoder"]
name = "ctre_simprocancoder"

[tool.robotpy-build.wrappers."ctre._simprocancoder".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._simprocancoder".maven_lib_download]
artifact_id = "simProCANcoder"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_SimProCANcoder",
]

[tool.robotpy-build.wrappers."ctre._simpropigeon2"]
name = "ctre_simpropigeon2"

[tool.robotpy-build.wrappers."ctre._simpropigeon2".override.arch_athena]
ignore = true

[tool.robotpy-build.wrappers."ctre._simpropigeon2".maven_lib_download]
artifact_id = "simProPigeon2"
group_id = "com.ctre.phoenixpro.sim"
repo_url = "https://maven.ctr-electronics.com/release"
version = "23.0.8"
libs = [
    "CTRE_SimProPigeon2",
]


# End autogenerated TOML


[tool.robotpy-build.wrappers.ctre]
name = "ctre"
depends = [
    "wpiutil",
    "wpinet",
    "wpimath_cpp",
    "wpiHal",
    "ntcore",
    "wpilibc",
    "ctre_wpiapi_cpp_sim",
    "ctre_api_cpp_sim",
    "ctre_cci_sim",
    "ctre_tools_sim",
    "ctre_simtalonsrx",
    "ctre_simtalonfx",
    "ctre_simvictorspx",
    "ctre_simpigeonimu",
    "ctre_simcancoder",
    "ctre_simprotalonfx",
    "ctre_simprocancoder",
    "ctre_simpropigeon2",
]

sources = [
    "ctre/ctre.cpp"
]

generation_data = "gen"

[tool.robotpy-build.wrappers.ctre.override.arch_athena]
depends = [
    "wpiutil",
    "wpinet",
    "wpimath_cpp",
    "wpiHal",
    "ntcore",
    "wpilibc",
    "ctre_wpiapi_cpp",
    "ctre_api_cpp",
    "ctre_cci",
    "ctre_tools",
]

[tool.robotpy-build.wrappers."ctre".autogen_headers]
# ctre/phoenix
# WPI_CallbackHelper = "ctre/phoenix/WPI_CallbackHelper.h"

# ctre/phoenix/motorcontrol
# WPI_AutoFeedEnable = "ctre/phoenix/motorcontrol/WPI_AutoFeedEnable.h"

# ctre/phoenix/motorcontrol/can
WPI_BaseMotorController = "ctre/phoenix/motorcontrol/can/WPI_BaseMotorController.h"
WPI_TalonFX = "ctre/phoenix/motorcontrol/can/WPI_TalonFX.h"
WPI_TalonSRX = "ctre/phoenix/motorcontrol/can/WPI_TalonSRX.h"
WPI_VictorSPX = "ctre/phoenix/motorcontrol/can/WPI_VictorSPX.h"

# ctre/phoenix/sensors
WPI_CANCoder = "ctre/phoenix/sensors/WPI_CANCoder.h"
WPI_Pigeon2 = "ctre/phoenix/sensors/WPI_Pigeon2.h"
WPI_PigeonIMU = "ctre/phoenix/sensors/WPI_PigeonIMU.h"

# ctre/phoenix/tasking
# ButtonMonitor = "ctre/phoenix/tasking/ButtonMonitor.h"


# ctre
# Phoenix = "ctre/Phoenix.h"

# ctre/phoenix
CANBusAddressable = "ctre/phoenix/CANBusAddressable.h"
CANifier = "ctre/phoenix/CANifier.h"
# CTRLogger = "ctre/phoenix/CTRLogger.h"
CustomParamConfiguration = "ctre/phoenix/CustomParamConfiguration.h"
# HsvToRgb = "ctre/phoenix/HsvToRgb.h"
# LinearInterpolation = "ctre/phoenix/LinearInterpolation.h"
# RCRadio3Ch = "ctre/phoenix/RCRadio3Ch.h"
# Stopwatch = "ctre/phoenix/Stopwatch.h"
# Utilities = "ctre/phoenix/Utilities.h"

# ctre/phoenix/led
Animation = "ctre/phoenix/led/Animation.h"
BaseStandardAnimation = "ctre/phoenix/led/BaseStandardAnimation.h"
BaseTwoSizeAnimation = "ctre/phoenix/led/BaseTwoSizeAnimation.h"
CANdle = "ctre/phoenix/led/CANdle.h"
# CANdleConfigUtil = "ctre/phoenix/led/CANdleConfigUtil.h" # broken?
CANdleConfiguration = "ctre/phoenix/led/CANdleConfiguration.h"
CANdleLedStripType = "ctre/phoenix/led/CANdleLedStripType.h"
ColorFlowAnimation = "ctre/phoenix/led/ColorFlowAnimation.h"
FireAnimation = "ctre/phoenix/led/FireAnimation.h"
LarsonAnimation = "ctre/phoenix/led/LarsonAnimation.h"
RainbowAnimation = "ctre/phoenix/led/RainbowAnimation.h"
RgbFadeAnimation = "ctre/phoenix/led/RgbFadeAnimation.h"
SingleFadeAnimation = "ctre/phoenix/led/SingleFadeAnimation.h"
StrobeAnimation = "ctre/phoenix/led/StrobeAnimation.h"
TwinkleAnimation = "ctre/phoenix/led/TwinkleAnimation.h"
TwinkleOffAnimation = "ctre/phoenix/led/TwinkleOffAnimation.h"
VBatOutputMode = "ctre/phoenix/led/VBatOutputMode.h"

# ctre/phoenix/motion
BufferedTrajectoryPointStream = "ctre/phoenix/motion/BufferedTrajectoryPointStream.h"

# ctre/phoenix/motorcontrol
# DeviceCatalog = "ctre/phoenix/motorcontrol/DeviceCatalog.h"
# GroupMotorControllers = "ctre/phoenix/motorcontrol/GroupMotorControllers.h"
IFollower = "ctre/phoenix/motorcontrol/IFollower.h"
IMotorController = "ctre/phoenix/motorcontrol/IMotorController.h"
IMotorControllerEnhanced = "ctre/phoenix/motorcontrol/IMotorControllerEnhanced.h"
SensorCollection = "ctre/phoenix/motorcontrol/SensorCollection.h"
TalonFXSensorCollection = "ctre/phoenix/motorcontrol/TalonFXSensorCollection.h"
TalonFXSimCollection = "ctre/phoenix/motorcontrol/TalonFXSimCollection.h"
TalonSRXSimCollection = "ctre/phoenix/motorcontrol/TalonSRXSimCollection.h"
VictorSPXSimCollection = "ctre/phoenix/motorcontrol/VictorSPXSimCollection.h"

# ctre/phoenix/motorcontrol/can
BaseMotorController = "ctre/phoenix/motorcontrol/can/BaseMotorController.h"
BaseTalon = "ctre/phoenix/motorcontrol/can/BaseTalon.h"
TalonFX = "ctre/phoenix/motorcontrol/can/TalonFX.h"
TalonSRX = "ctre/phoenix/motorcontrol/can/TalonSRX.h"
VictorSPX = "ctre/phoenix/motorcontrol/can/VictorSPX.h"

# ctre/phoenix/music
Orchestra = "ctre/phoenix/music/Orchestra.h"

# ctre/phoenix/platform/can
# PlatformCAN = "ctre/phoenix/platform/can/PlatformCAN.h"

# ctre/phoenix/sensors
BasePigeon = "ctre/phoenix/sensors/BasePigeon.h"
BasePigeonSimCollection = "ctre/phoenix/sensors/BasePigeonSimCollection.h"
CANCoder = "ctre/phoenix/sensors/CANCoder.h"
CANCoderSimCollection = "ctre/phoenix/sensors/CANCoderSimCollection.h"
Pigeon2 = "ctre/phoenix/sensors/Pigeon2.h"
PigeonIMU = "ctre/phoenix/sensors/PigeonIMU.h"

# ctre/phoenix/signals
IInvertable = "ctre/phoenix/signals/IInvertable.h"
IOutputSignal = "ctre/phoenix/signals/IOutputSignal.h"
MovingAverage = "ctre/phoenix/signals/MovingAverage.h"

# ctre/phoenix/tasking
ILoopable = "ctre/phoenix/tasking/ILoopable.h"
IProcessable = "ctre/phoenix/tasking/IProcessable.h"

# ctre/phoenix/tasking/Schedulers
# ConcurrentScheduler = "ctre/phoenix/tasking/Schedulers/ConcurrentScheduler.h"
# SequentialScheduler = "ctre/phoenix/tasking/Schedulers/SequentialScheduler.h"

# ctre/phoenix/unmanaged
Unmanaged = "ctre/phoenix/unmanaged/Unmanaged.h"


# ctre/configparams
# BmsJsonGenerator = "ctre/configparams/BmsJsonGenerator.h"
# ConfigAllDeserializer = "ctre/configparams/ConfigAllDeserializer.h"
# ConfigAllSerializer = "ctre/configparams/ConfigAllSerializer.h"
# ConfigByteArray = "ctre/configparams/ConfigByteArray.h"
# ConfigConstants = "ctre/configparams/ConfigConstants.h"
# ConfigNumber = "ctre/configparams/ConfigNumber.h"
# ConfigParseValue = "ctre/configparams/ConfigParseValue.h"
# ConfigTypes = "ctre/configparams/ConfigTypes.h"
# DecoratedConfigGroupSerializer = "ctre/configparams/DecoratedConfigGroupSerializer.h"
# Pigeon2JsonGenerator = "ctre/configparams/Pigeon2JsonGenerator.h"

# ctre/diagnostics
# diag_framing = "ctre/diagnostics/diag_framing.h"
# status_bits = "ctre/diagnostics/status_bits.h"

# ctre
# packing = "ctre/packing.h"

# ctre/phoenix
CANifierControlFrame = "ctre/phoenix/CANifierControlFrame.h"
CANifierFaults = "ctre/phoenix/CANifierFaults.h"
CANifierStatusFrame = "ctre/phoenix/CANifierStatusFrame.h"
CANifierStickyFaults = "ctre/phoenix/CANifierStickyFaults.h"
CANifierVelocityMeasPeriod = "ctre/phoenix/CANifierVelocityMeasPeriod.h"
ErrorCode = "ctre/phoenix/ErrorCode.h"
PhoenixVersion = "ctre/phoenix/PhoenixVersion.h"
# autocache = "ctre/phoenix/autocache.h"

# ctre/phoenix/cci
# BuffTrajPointStream_CCI = "ctre/phoenix/cci/BuffTrajPointStream_CCI.h"
# CANCoder_CCI = "ctre/phoenix/cci/CANCoder_CCI.h"
# CANdle_CCI = "ctre/phoenix/cci/CANdle_CCI.h"
# CANifier_CCI = "ctre/phoenix/cci/CANifier_CCI.h"
# CCI = "ctre/phoenix/cci/CCI.h"
# Diagnostics_CCI = "ctre/phoenix/cci/Diagnostics_CCI.h"
# Logger_CCI = "ctre/phoenix/cci/Logger_CCI.h"
# MotController_CCI = "ctre/phoenix/cci/MotController_CCI.h"
# Orchestra_CCI = "ctre/phoenix/cci/Orchestra_CCI.h"
# PDP_CCI = "ctre/phoenix/cci/PDP_CCI.h"
# PigeonIMU_CCI = "ctre/phoenix/cci/PigeonIMU_CCI.h"
# PlatformCAN_CCI = "ctre/phoenix/cci/PlatformCAN_CCI.h"
# Platform_CCI = "ctre/phoenix/cci/Platform_CCI.h"
# Unmanaged_CCI = "ctre/phoenix/cci/Unmanaged_CCI.h"

# ctre/phoenix/core
GadgeteerUartClient = "ctre/phoenix/core/GadgeteerUartClient.h"

# ctre/phoenix
# export = "ctre/phoenix/export.h"

# ctre/phoenix/jni
# com_ctre_phoenix_CANifierJNI = "ctre/phoenix/jni/com_ctre_phoenix_CANifierJNI.h"
# com_ctre_phoenix_CTRLoggerJNI = "ctre/phoenix/jni/com_ctre_phoenix_CTRLoggerJNI.h"
# com_ctre_phoenix_OrchestraJNI = "ctre/phoenix/jni/com_ctre_phoenix_OrchestraJNI.h"
# com_ctre_phoenix_led_CANdleJNI = "ctre/phoenix/jni/com_ctre_phoenix_led_CANdleJNI.h"
# com_ctre_phoenix_motion_BuffTrajPointStreamJNI = "ctre/phoenix/jni/com_ctre_phoenix_motion_BuffTrajPointStreamJNI.h"
# com_ctre_phoenix_motorcontrol_can_MotControllerJNI = "ctre/phoenix/jni/com_ctre_phoenix_motorcontrol_can_MotControllerJNI.h"
# com_ctre_phoenix_platform_PlatformJNI = "ctre/phoenix/jni/com_ctre_phoenix_platform_PlatformJNI.h"
# com_ctre_phoenix_platform_can_PlatformCANJNI = "ctre/phoenix/jni/com_ctre_phoenix_platform_can_PlatformCANJNI.h"
# com_ctre_phoenix_sensors_CANCoderJNI = "ctre/phoenix/jni/com_ctre_phoenix_sensors_CANCoderJNI.h"
# com_ctre_phoenix_sensors_PigeonImuJNI = "ctre/phoenix/jni/com_ctre_phoenix_sensors_PigeonImuJNI.h"
# com_ctre_phoenix_unmanaged_UnmanagedJNI = "ctre/phoenix/jni/com_ctre_phoenix_unmanaged_UnmanagedJNI.h"

# ctre/phoenix/led
CANdleControlFrame = "ctre/phoenix/led/CANdleControlFrame.h"
CANdleFaults = "ctre/phoenix/led/CANdleFaults.h"
CANdleStatusFrame = "ctre/phoenix/led/CANdleStatusFrame.h"

# ctre/phoenix/motion
MotionProfileStatus = "ctre/phoenix/motion/MotionProfileStatus.h"
SetValueMotionProfile = "ctre/phoenix/motion/SetValueMotionProfile.h"
TrajectoryPoint = "ctre/phoenix/motion/TrajectoryPoint.h"

# ctre/phoenix/motorcontrol
ControlFrame = "ctre/phoenix/motorcontrol/ControlFrame.h"
ControlMode = "ctre/phoenix/motorcontrol/ControlMode.h"
DemandType = "ctre/phoenix/motorcontrol/DemandType.h"
Faults = "ctre/phoenix/motorcontrol/Faults.h"
FeedbackDevice = "ctre/phoenix/motorcontrol/FeedbackDevice.h"
FollowerType = "ctre/phoenix/motorcontrol/FollowerType.h"
InvertType = "ctre/phoenix/motorcontrol/InvertType.h"
LimitSwitchType = "ctre/phoenix/motorcontrol/LimitSwitchType.h"
MotorCommutation = "ctre/phoenix/motorcontrol/MotorCommutation.h"
NeutralMode = "ctre/phoenix/motorcontrol/NeutralMode.h"
RemoteSensorSource = "ctre/phoenix/motorcontrol/RemoteSensorSource.h"
SensorTerm = "ctre/phoenix/motorcontrol/SensorTerm.h"
StatorCurrentLimitConfiguration = "ctre/phoenix/motorcontrol/StatorCurrentLimitConfiguration.h"
StatusFrame = "ctre/phoenix/motorcontrol/StatusFrame.h"
StickyFaults = "ctre/phoenix/motorcontrol/StickyFaults.h"
SupplyCurrentLimitConfiguration = "ctre/phoenix/motorcontrol/SupplyCurrentLimitConfiguration.h"
VelocityMeasPeriod = "ctre/phoenix/motorcontrol/VelocityMeasPeriod.h"

# ctre/phoenix
paramEnum = "ctre/phoenix/paramEnum.h"

# ctre/phoenix/platform
# BasePlatform = "ctre/phoenix/platform/BasePlatform.h"
# Platform-pack = "ctre/phoenix/platform/Platform-pack.h"
# Platform = "ctre/phoenix/platform/Platform.h"
# ReportError = "ctre/phoenix/platform/ReportError.h"
# SleepUs = "ctre/phoenix/platform/SleepUs.h"
# canframe = "ctre/phoenix/platform/canframe.h"
# canivore_device = "ctre/phoenix/platform/canivore_device.h"

# ctre/phoenix/sensors
AbsoluteSensorRange = "ctre/phoenix/sensors/AbsoluteSensorRange.h"
CANCoderFaults = "ctre/phoenix/sensors/CANCoderFaults.h"
CANCoderStatusFrame = "ctre/phoenix/sensors/CANCoderStatusFrame.h"
CANCoderStickyFaults = "ctre/phoenix/sensors/CANCoderStickyFaults.h"
MagnetFieldStrength = "ctre/phoenix/sensors/MagnetFieldStrength.h"
Pigeon2_Faults = "ctre/phoenix/sensors/Pigeon2_Faults.h"
Pigeon2_StickyFaults = "ctre/phoenix/sensors/Pigeon2_StickyFaults.h"
PigeonIMU_ControlFrame = "ctre/phoenix/sensors/PigeonIMU_ControlFrame.h"
PigeonIMU_Faults = "ctre/phoenix/sensors/PigeonIMU_Faults.h"
PigeonIMU_StatusFrame = "ctre/phoenix/sensors/PigeonIMU_StatusFrame.h"
PigeonIMU_StickyFaults = "ctre/phoenix/sensors/PigeonIMU_StickyFaults.h"
SensorInitializationStrategy = "ctre/phoenix/sensors/SensorInitializationStrategy.h"
SensorTimeBase = "ctre/phoenix/sensors/SensorTimeBase.h"
SensorVelocityMeasPeriod = "ctre/phoenix/sensors/SensorVelocityMeasPeriod.h"

# ctre/phoenix/string_util
# string_util = "ctre/phoenix/string_util/string_util.h"



